
services:
  life-tips-crawler:
    build: .
    container_name: life-tips-crawler
    restart: unless-stopped
    
    # Environment variables
    environment:
      - CRAWLER_CONCURRENCY=64
      - EXPORT_SHARD_SIZE=10000
      - STORAGE_DATA_DIR=/app/data
      - STORAGE_CACHE_DIR=/app/cache
      - STORAGE_LOGS_DIR=/app/logs
      - STORAGE_SHARDS_DIR=/app/output
      - MONITORING_LOG_LEVEL=INFO
      - DB_TYPE=sqlite
      - DB_SQLITE_PATH=/app/data/crawler.db
    
    # Volume mounts for persistence
    volumes:
      - ./data:/app/data
      - ./cache:/app/cache
      - ./logs:/app/logs
      - ./output:/app/output
      - ./config.yaml:/app/config.yaml:ro
    
    # Port mapping for health checks
    ports:
      - "8080:8080"
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 2G
        reservations:
          cpus: '2.0'
          memory: 1G
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.path.insert(0, '/app/src'); from src.config import config; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    
    # Default command - run continuous crawling
    command: ["python", "run_pipeline.py", "all", "--out-dir", "/app/output", "--continuous"]

  # Optional: Redis for larger scale deployments
  redis:
    image: redis:7-alpine
    container_name: life-tips-redis
    restart: unless-stopped
    profiles: ["redis"]
    
    volumes:
      - redis_data:/data
    
    ports:
      - "6379:6379"
    
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: life-tips-prometheus
    restart: unless-stopped
    profiles: ["monitoring"]
    
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    
    ports:
      - "9090:9090"
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: life-tips-grafana
    restart: unless-stopped
    profiles: ["monitoring"]
    
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    
    ports:
      - "3000:3000"

volumes:
  redis_data:
  prometheus_data:
  grafana_data: 